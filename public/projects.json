[
  {
    "name": "RaidHub",
    "description": "RaidHub stands out as a milestone project in my portfolio, highlighting my expertise in full-stack development. It demonstrates my knowledge across the tech stack: front end, backend, cloud, continuous integration, and much more. As the lead developer on the team, I played a pivotal role in conceiving and bringing to life RaidHub—a centralized platform designed for the Destiny 2 gaming community, providing advanced in-game statistics, leaderboards for World First races, custom achievements, and more, all sourced from the Bungie API.\n\nThe cornerstone of the site is a robust REST API. This API seamlessly connects to our performant PostgreSQL database, which boasts an impressive record with over 500GB of connected records, including over 400 million raid reports and 20 million players. The scale of this database served as a massive technical hurdle, one which we are proud to have surpassed. In addition, our Golang microservices form a solid infrastructure. Notably, our web crawler seamlessly sends out over 250 web requests per second, updating the database with live records. This ensures players receive real-time updates on live activities, creating a dynamic and engaging user experience.\n\nOn the front-end, TypeScript serves as the bedrock for code reliability and early bug detection through well-defined linters and code formatters. We harnessed the power of Next.js through both server-side rendering and static generation in conjunction with Vercel’s CDN to deliver fully hydrated pages from the edge, all optimized for SEO. The integration of tRPC streamlined communication between the front-end and our serverless backend, resulting in type-safe data retrieval, input sanitization/validation, and a seamless developer experience. Additionally, react-query's efficient data caching mechanism optimized performance for client side data fetching, ensuring quick load times and enabling optimistic updates.",
    "url": "https://raidhub.io/",
    "repository": "https://github.com/raid-hub",
    "images": ["/raidhub.png"],
    "tech": {
      "REST API": {
        "Framework": "Express.js",
        "Hosting": "Digital Ocean VPS",
        "Cache Layer": "Cloudlare"
      },
      "Web Crawler/Database": {
        "Microservices": "Golang",
        "Hosting": "Digital Ocean VPS",
        "Database": "Postgres"
      },
      "CDN": ["Cloudlare", "AWS S3"],
      "Web App": {
        "Frontend": [
          "Next.js",
          "React",
          "NextAuth",
          "tRPC",
          "React-Query",
          "Vanilla CSS",
          "Framer Motion"
        ],
        "Serverless Backend": ["tRPC", "Prisma", "MySQL", "AWS SDK (S3)"],
        "Hosting": ["Vercel", "Planetscale"]
      }
    }
  },
  {
    "name": "NU Carpool",
    "description": "CarpoolNU is a web app developed by Sandbox for Northeastern students seeking to carpool to their co-ops in the Boston area. As part of the development team, I collaborated on integrating new features using the T3 web stack (Typescript, React, Next.js, tRPC, Prisma.js, TailwindCSS). I played a key role in developing and implementing essential features such as a favoriting system, invitation system, and carpool group management using Prisma.js + MySQL. Additionally, I contributed to the intuitive user interface, allowing users to easily favorite others, join carpool groups, and manage their profiles. Lastly, I worked towards delivering the final product to our client, MentorHub at Northeastern, for summer 2023.",
    "repository": "https://github.com/sandboxnu/nucarpool",
    "url": "https://www.carpoolnu.com/",
    "images": ["/carpool.png"],
    "tech": {
      "Full Stack": ["Next.js", "NextAuth", "tRPC"],
      "Frontend": ["React", "TailwindCSS"],
      "Backend": ["MySQL"]
    }
  },
  {
    "name": "Pasta Zaddy Mobile App",
    "description": "The Pasty Zaddy Mobile app is an iOS app created for Pasta Zaddy, a private pasta chef and influencer. It is developed with react native and a firebase backend. It is quite early in development so there is not much else to add at this time."
  },
  {
    "name": "Bungie.net Core",
    "description": "The Bungie.net Core project is node npm package that I created. It leverages TypeScript and OpenAPI v3.0 tools to auto-generate TypeScript definitions for the Bungie.net API. These defintions speed up the development process of web applications working with the Bungie.net platform due to strong type safety. The project's main focus is on automating the generation of TypeScript definitions with up-to-date documentation for developers, but I have also created utility functions to access the manifest and manage authentication. Additionally, I optimized the npm package to reduce bundle size and improve overall performance. By incorporating live updates, the project ensures seamless support for new game systems in Destiny 2, enabling developers stay up-to-date with the latest features and functionality.",
    "url": "https://www.npmjs.com/package/bungie-net-core",
    "repository": "https://github.com/owensimpson/bungie-net-core"
  },
  {
    "name": "Tweeter",
    "description": "Tweeter is an application I developed that utilizes webscraping techniques, the OpenAI API, and Twitter API. The project revolves around simulating tweets from a given user by analyzing and learning from their existing tweets. To achieve this, I implemented a web scraping mechanism to collect a user's tweets, which was necessary due to Twitter's ludicrous API costs. I then utilized the OpenAI's GPT-3.5 Turbo engine using their API to generate realistic tweet simulations based on the collected data. Finally, I integrated the Twitter API to automatically post these simulated tweets on the user's behalf. This project allowed me to explore the possibilities of AI-generated content and showcase my skills in API integration and web scraping. It was a fun  endeavor that combined various technologies to create an engaging and funny experience for myself and my friends.",
    "repository": "https://github.com/owensimpson/tweeter"
  },
  {
    "name": "Ada-2",
    "description": "Ada-2 is a JavaScript-based Discord bot designed to enhance the gaming experience for players in Destiny 2 by notifying them daily when rare items are sold by in-game vendors. The application was deployed to the cloud using AWS, supporting over 100 guilds and 2000 users daily. I optimized the algorithm to run using a Cron job to efficiently handle over 1000 API requests in less than 5 minutes, in order to efficiently serve a large user base once per day. Additionally, I actively managed operations by prioritizing feature requests and addressing bugs through various public forums.",
    "repository": "https://github.com/owensimpson/Ada2"
  }
]
