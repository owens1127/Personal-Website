[
  {
    "name": "NU Carpool",
    "description": "CarpoolNU is a web app developed by Sandbox for Northeastern students seeking to carpool to their co-ops in the Boston area. As part of the development team, I collaborated on integrating new features using the T3 web stack (Typescript, React, Next.js, tRPC, Prisma.js, TailwindCSS). I played a key role in developing and implementing essential features such as a favoriting system, invitation system, and carpool group management using Prisma.js + MySQL. Additionally, I contributed to the intuitive user interface, allowing users to easily favorite others, join carpool groups, and manage their profiles. Lastly, I worked towards delivering the final product to our client, MentorHub at Northeastern, for summer 2023.",
    "url": "https://carpoolnu.com/",
    "repository": "https://github.com/sandboxnu/nucarpool"
  },
  {
    "name": "RaidHub",
    "description": "RaidHub is a fullstack collaborative project I worked on with a team of 3. This website serves as a centralized platform for Destiny 2 players, providing them with the ability to view leaderboards for Worlds First races and track their raid statistics sourced from the Bungie API. Inspired by a similar site, we sought to deliver a faster experience.\n I was resposibile for the front end work. By leveraging the power of TypeScript, I ensured strong typing and reliable code throughout the development process. With React, I crafted intuitive and responsive user interfaces, while Next.js optimized performance and offered server-side rendering capabilities. RaidHub is designed to empower Destiny 2 communities by enabling players to showcase their achievements, monitor their progress, and engage in healthy competition. It was a rewarding experience to contribute to this project and create a valuable resource for the community.",
    "url": "https://alpha.raidhub.app/",
    "repository": "https://github.com/Raid-Hub/RaidHub-Website"
  },
  {
    "name": "Bungie.net Core",
    "description": "The Bungie.net Core project is node npm package that I created. It leverages TypeScript and OpenAPI v3.0 tools to auto-generate TypeScript definitions for the Bungie.net API. These defintions speed up the development process of web applications working with the Bungie.net platform due to strong type safety. The project's main focus is on automating the generation of TypeScript definitions with up-to-date documentation for developers, but I have also created utility functions to access the manifest and manage authentication. Additionally, I optimized the npm package to reduce bundle size and improve overall performance. By incorporating live updates, the project ensures seamless support for new game systems in Destiny 2, enabling developers stay up-to-date with the latest features and functionality.",
    "url": "https://www.npmjs.com/package/bungie-net-core",
    "repository": "https://github.com/owensimpson/bungie-net-core"
  },
  {
    "name": "Tweeter",
    "description": "Tweeter is an application I developed that utilizes webscraping techniques, the OpenAI API, and Twitter API. The project revolves around simulating tweets from a given user by analyzing and learning from their existing tweets. To achieve this, I implemented a web scraping mechanism to collect a user's tweets, which was necessary due to Twitter's ludicrous API costs. I then utilized the OpenAI's GPT-3.5 Turbo engine using their API to generate realistic tweet simulations based on the collected data. Finally, I integrated the Twitter API to automatically post these simulated tweets on the user's behalf. This project allowed me to explore the possibilities of AI-generated content and showcase my skills in API integration and web scraping. It was a fun  endeavor that combined various technologies to create an engaging and funny experience for myself and my friends.",
    "repository": "https://github.com/owensimpson/tweeter"
  },
  {
    "name": "Ada-2",
    "description": "Ada-2 is a JavaScript-based Discord bot designed to enhance the gaming experience for players in Destiny 2 by notifying them daily when rare items are sold by in-game vendors. The application was deployed to the cloud using AWS, supporting over 100 guilds and 2000 users daily. I optimized the algorithm to run using a Cron job to efficiently handle over 1000 API requests in less than 5 minutes, in order to efficiently serve a large user base once per day. Additionally, I actively managed operations by prioritizing feature requests and addressing bugs through various public forums.",
    "repository": "https://github.com/owensimpson/Ada2"
  }
]
